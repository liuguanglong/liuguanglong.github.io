<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nintens&#39;s Blogs </title>
    <link>http://blog.nintens.com/</link>
    <description>Recent content on Nintens&#39;s Blogs </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Nintens@2022 Copywright</copyright>
    <lastBuildDate>Sat, 19 Mar 2022 11:25:05 -0400</lastBuildDate>
    
        <atom:link href="http://blog.nintens.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>使用Blazor Server构建企业级应用(一) -- 概述</title>
        <link>http://blog.nintens.com/posts/blazorserver1/</link>
        <pubDate>Sat, 19 Mar 2022 11:25:05 -0400</pubDate>
        
        <guid>http://blog.nintens.com/posts/blazorserver1/</guid>
        <description>Nintens&#39;s Blogs  http://blog.nintens.com/posts/blazorserver1/ -&lt;p&gt;本文系列文章主要记述构建基于表单的简易Low-Code平台过程中的技术选型和实现的相关技术点。
整体架构采用Blazor Server, MudBlazor等技术实现。平台运行在CentOs 7服务器，基于Docker-Compose运行。
使用AzureDevops进行代码管理和发布。&lt;/p&gt;
&lt;p&gt;本系列文章分别描述以下技术点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Blazor Server项目创建&lt;/li&gt;
&lt;li&gt;EntityFrameWork以及MySql集成&lt;/li&gt;
&lt;li&gt;Docker-Compose制作和发布以及单机调试&lt;/li&gt;
&lt;li&gt;客户端机密信息存储机制&lt;/li&gt;
&lt;li&gt;Docker自动化构建&lt;/li&gt;
&lt;li&gt;Linux平台生产机器发布&lt;/li&gt;
&lt;li&gt;Asp.net Identity身份验证集成&lt;/li&gt;
&lt;li&gt;Asp.net Identity画面定制化开发&lt;/li&gt;
&lt;li&gt;DDD基础框架&lt;/li&gt;
&lt;li&gt;自动化测试&lt;/li&gt;
&lt;li&gt;基于Cookie和Token的身份验证&lt;/li&gt;
&lt;li&gt;Blazor Server集成 WebAPI服务&lt;/li&gt;
&lt;li&gt;使用MudBlazor&lt;/li&gt;
&lt;li&gt;日志记录机制和日志查看功能&lt;/li&gt;
&lt;li&gt;Blazor Server的异步处理&lt;/li&gt;
&lt;li&gt;Blazor的多语言处理&lt;/li&gt;
&lt;li&gt;Blazor的业务数据的时区处理&lt;/li&gt;
&lt;/ol&gt;
- http://blog.nintens.com/posts/blazorserver1/ - Nintens@2022 Copywright</description>
        </item>
    
    
  </channel>
</rss> 