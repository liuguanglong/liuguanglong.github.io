<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blazor authentication and authorization on Nintens&#39; Blogs </title>
    <link>http://www.nintens.com/tags/blazor-authentication-and-authorization/</link>
    <description>Recent content in Blazor authentication and authorization on Nintens&#39; Blogs </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Nintens@2022 Copywright</copyright>
    <lastBuildDate>Sat, 09 Apr 2022 23:25:05 -0400</lastBuildDate><atom:link href="http://www.nintens.com/tags/blazor-authentication-and-authorization/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用Blazor Server构建企业级应用(五) -- 使用asp.net Identity完成功能的权限控制</title>
      <link>http://www.nintens.com/posts/blazorserver5/</link>
      <pubDate>Sat, 09 Apr 2022 23:25:05 -0400</pubDate>
      
      <guid>http://www.nintens.com/posts/blazorserver5/</guid>
      <description>使用Blazor Server构建企业级应用(五) 使用asp.net Identity完成功能的权限控制 本文地址：http://www.nintens.com/posts/blazorserver5/
作者邮箱：liuguanglong@yahoo.com 欢迎转载，请在明显位置给出出处及链接
本文是nintens架构系列文章的第五篇，包含以下内容
 扩展IdentityUser类用来保存业务上的扩展数据 使用Asp.net Identity Role实现用户权限控制  一 给IdentityUser扩展字段  在respository项目中追加ApplicationUser类，用来扩展字段  public class ApplicationUser : IdentityUser {  public string? CustomTag { get; set; } } 在mysql数据库中的aspnetusers表中添加CustomTag字段  修改ApplicationContxt类,使用ApplicationUser类替代Identity中默认提供的IdentityUser类  public class ApplicationDbContext : IdentityDbContext&amp;lt;ApplicationUser&amp;gt; {  public ApplicationDbContext(DbContextOptions&amp;lt;ApplicationDbContext&amp;gt; options)  : base(options)  {  }   protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)  {  }  protected override void OnModelCreating(ModelBuilder builder)  {  base.</description>
    </item>
    
    <item>
      <title>使用Blazor Server构建企业级应用(四) -- 添加asp.net Identity用来完成授权和用户权限控制</title>
      <link>http://www.nintens.com/posts/blazorserver4/</link>
      <pubDate>Tue, 05 Apr 2022 21:25:05 -0400</pubDate>
      
      <guid>http://www.nintens.com/posts/blazorserver4/</guid>
      <description>使用Blazor Server构建企业级应用(四) 添加asp.net Identity用来完成授权和用户权限控制 本文地址：http://www.nintens.com/posts/blazorserver4/
作者邮箱：liuguanglong@yahoo.com 欢迎转载，请在明显位置给出出处及链接
本文是nintens架构系列文章的第四篇，包含以下内容
 添加asp.net Identity使用的数据库表 在项目中添加asp.net Identity相关配置 配置应用权限要求用户登录才能访问 添加asp.net Identity自带的功能画面  一 添加asp.net Identity使用的数据库表  在数据库中创建asp.NET Identity用到的数据库表  在mysql中执行Identity.sql添加Identity用到的7张表到nintens数据库
Identity.sql默认会创建Administrators角色，同时会创建一个超级管理员用户 liuguanglong@yahoo.com，请修改为默认的管理员用户。
这个邮箱会用来获取更新用的密码。创建数据库表请修改。
下载链接: 创建数据库用的Sql文件
添加用户验证用的DBContext  在repository中引入asp.NET Identity相关的包
 Install-Package Microsoft.aspNetCore.Identity.EntityFrameworkCore 在repository项目中添加ApplicationDBContext类
 public class ApplicationDbContext : IdentityDbContext  {  public ApplicationDbContext(DbContextOptions&amp;lt;ApplicationDbContext&amp;gt; options)  : base(options)  {  }  } 二 在项目中添加asp.ent Identity相关配置  nintens项目配置  引入asp.NET Identity相关的包
 Install-Package Microsoft.aspNetCore.Identity.EntityFrameworkCore  Install-Package Microsoft.</description>
    </item>
    
  </channel>
</rss>
